<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.work.course.mapper.CourseMapper">

    <resultMap type="Course" id="CourseResult">
        <result property="courseId" column="course_id"/>
        <result property="courseName" column="course_name"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="price" column="price"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>

    </resultMap>

    <sql id="selectCourseVo">
        select course_id, course_name, start_time, end_time, price,create_by,update_by,create_time,update_time from course
    </sql>

    <select id="selectCourseList" parameterType="Course" resultMap="CourseResult">
        <include refid="selectCourseVo"/>
        <where>
            <if test="courseName != null  and courseName != ''">
                and course_name like concat('%', #{courseName}, '%')
            </if>
            <if test="startTime != null ">
                and start_time = #{startTime}
            </if>
            <if test="endTime != null ">
                and end_time = #{endTime}
            </if>
            <if test="price != null ">
                and price = #{price}
            </if>
        </where>
    </select>

    <select id="selectCourseById" parameterType="Long" resultMap="CourseResult">
        <include refid="selectCourseVo"/>
        where course_id = #{courseId}
    </select>

    <insert id="insertCourse" parameterType="Course" useGeneratedKeys="true"
            keyProperty="courseId">
        insert into course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseName != null  and courseName != ''">course_name,
            </if>
            <if test="startTime != null ">start_time,
            </if>
            <if test="endTime != null ">end_time,
            </if>
            <if test="price != null ">price,
            </if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseName != null  and courseName != ''">#{courseName},
            </if>
            <if test="startTime != null ">#{startTime},
            </if>
            <if test="endTime != null ">#{endTime},
            </if>
            <if test="price != null ">#{price},
            </if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            sysdate()
        </trim>
    </insert>

    <update id="updateCourse" parameterType="Course">
        update course
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseName != null  and courseName != ''">course_name = #{courseName},
            </if>
            <if test="startTime != null ">start_time = #{startTime},
            </if>
            <if test="endTime != null ">end_time = #{endTime},
            </if>
            <if test="price != null ">price = #{price},
            </if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </trim>
        where course_id = #{courseId}
    </update>

    <delete id="deleteCourseById" parameterType="Long">
        delete from course where course_id = #{courseId}
    </delete>

    <delete id="deleteCourseByIds" parameterType="String">
        delete from course where course_id in
        <foreach item="courseId" collection="array" open="(" separator="," close=")">
            #{courseId}
        </foreach>
    </delete>

</mapper>